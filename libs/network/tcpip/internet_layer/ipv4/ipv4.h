#ifndef IPV4_H
#define IPV4_H
#include <stdint.h>
#include <macros.h>
#include <utils.h>
//#include <vector>

/* IPv4 Header
+---+---+---+---+---+---+---+---+---+---+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+
| 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 |
+---+---+---+---+---+---+---+---+---+---+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+
|     Version   | Header Length |             Type of Service         |                               Total Length                                    |
+---------------+---------------+-------------------------------------+--------------+----------------------------------------------------------------+
|                          Identification                             |    Flags     |                       Fragment Offset                          |
+-------------------------------+-------------------------------------+--------------+----------------------------------------------------------------+
|         Time to Live          |               Protocol              |                             Header Checksum                                   |
+-------------------------------+-------------------------------------+-------------------------------------------------------------------------------+
|                                                                Source Address                                                                       |
+-----------------------------------------------------------------------------------------------------------------------------------------------------+
|                                                              Destination Address                                                                    |
+-----------------------------------------------------------------------------------------------------------------------------------------------------+
|                                                               Option and Padding                                                                    |
+-----------------------------------------------------------------------------------------------------------------------------------------------------+
*/

#pragma pack(1)
struct ipv4_header_t
{
    ipv4_header_t() {}
    u8t version:4;
    u8t headerLength:4;
    u8t typeOfService;
    u32t total_length;
    u16t identificaton;
    u8t flags:3;
    u16t fragmentOffset:13;
    u8t TTL;
    u8t protocol;
    u32t headerCRC;
    u32t sourceAddress;
    u32t destinationAddress;
    u32t padding_option;
};
typedef union{
    uint8_t fields[4];
    u32t ip;
}ipv4addr_t;

#pragma pop

class IPv4
{
public:
    //---- Methods -----//
    IPv4();
    ~IPv4();

    //---- Variables ----//

private:
    //---- Methods -----//
    u32t ipv4_aton(const char *ip);

    //---- Variables ----//
    ipv4addr_t self;
};

#endif
